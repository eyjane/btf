/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Beans.CategoryBean;
import Beans.IngredientBean;
import Beans.RawBean;
import Beans.RecipeBean;
import DAO.Implementation.CategoryDAOImplementation;
import DAO.Implementation.IngredientDAOImplementation;
import DAO.Implementation.RawDAOImplementation;
import DAO.Implementation.RecipeDAOImplementation;
import DAO.Interface.CategoryDAOInterface;
import DAO.Interface.IngredientDAOInterface;
import DAO.Interface.RawDAOInterface;
import DAO.Interface.RecipeDAOInterface;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author earleenjanefuentes
 */
public class AddRecipe extends javax.swing.JFrame {

    private CategoryDAOInterface catImp = new CategoryDAOImplementation();
    private RawDAOInterface rawImp = new RawDAOImplementation();
    private RecipeDAOInterface rcImp = new RecipeDAOImplementation();
    private IngredientDAOInterface inImp = new IngredientDAOImplementation();
    private ArrayList<IngredientBean> aIngredient = new ArrayList<IngredientBean>();

    addIngredient AddIngredient;
    RCManagement rcman;

    /**
     * Creates new form AddRecipe
     */
    public AddRecipe(RCManagement r) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        String laf = UIManager.getSystemLookAndFeelClassName();
        UIManager.setLookAndFeel(laf);
        this.rcman = r;

        initComponents();
        errorLabel.setVisible(false);
        errorLabel2.setVisible(false);
        errorLabel3.setVisible(false);
        errorLabel4.setVisible(false);
        prepareCombo();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        actualLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        costField = new javax.swing.JTextField();
        stockField = new javax.swing.JTextField();
        categoryBox = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        ingredientsTable = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        editIngredient = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        addRecipe = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        errorLabel2 = new javax.swing.JLabel();
        errorLabel3 = new javax.swing.JLabel();
        errorLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setText("Add Recipe");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 47));

        jLabel2.setText("Name: ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        actualLabel.setText("0.00");
        getContentPane().add(actualLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 100, -1));

        jLabel4.setText("Stock:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        jLabel5.setText("Category: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel6.setText("Ingredients:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, -1, -1));

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        getContentPane().add(nameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 255, -1));
        getContentPane().add(costField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 84, -1));
        getContentPane().add(stockField, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 84, -1));

        categoryBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryBoxActionPerformed(evt);
            }
        });
        getContentPane().add(categoryBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 179, -1));

        ingredientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ingredientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingredientsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ingredientsTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 460, 108));

        editIngredient.setText("Edit Ingredients");
        editIngredient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editIngredientActionPerformed(evt);
            }
        });
        getContentPane().add(editIngredient, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, -1, -1));

        nameLabel.setText(" ");
        getContentPane().add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(342, 243, 0, -1));

        addRecipe.setText("Add Recipe");
        addRecipe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRecipeActionPerformed(evt);
            }
        });
        getContentPane().add(addRecipe, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, -1, -1));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        getContentPane().add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, -1, -1));

        errorLabel.setForeground(new java.awt.Color(255, 0, 51));
        errorLabel.setText("ERROR: Required field.");
        getContentPane().add(errorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        errorLabel2.setForeground(new java.awt.Color(255, 0, 51));
        errorLabel2.setText("ERROR: Required field. Please input valid number.");
        getContentPane().add(errorLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, -1, -1));

        errorLabel3.setForeground(new java.awt.Color(255, 0, 51));
        errorLabel3.setText("ERROR: Recipe must have at least one ingredient.");
        getContentPane().add(errorLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, -1, -1));

        errorLabel4.setForeground(new java.awt.Color(255, 0, 51));
        errorLabel4.setText("ERROR: Required field. Please input valid number.");
        getContentPane().add(errorLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 170, -1, -1));

        jLabel7.setText("Cost: ");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel8.setText("Actual Price:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 580, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void categoryBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryBoxActionPerformed

    private void editIngredientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editIngredientActionPerformed
        int nrow = ingredientsTable.getRowCount();
        //System.out.println(nrow);

        int i;
        int rid;

        aIngredient = new ArrayList<IngredientBean>();
        if (nrow != 0) {
            for (i = 0; i < nrow; i++) {
                IngredientBean ibean = new IngredientBean();
                RawBean rbean = new RawBean();
                rid = Integer.parseInt(ingredientsTable.getModel().getValueAt(i, 0).toString());
                rbean = rawImp.getRaw(rid);
                ibean.setRaw(rbean);
                ibean.setAmount(Float.parseFloat(ingredientsTable.getModel().getValueAt(i, 2).toString()));
                aIngredient.add(ibean);
            }
        }

        try {
            AddIngredient = new addIngredient(this, aIngredient);
            AddIngredient.setVisible(true);
            this.setVisible(false);
        } catch (Exception e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_editIngredientActionPerformed

    private void addRecipeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRecipeActionPerformed
        boolean add = true;

        if (!nameField.getText().toString().isEmpty()) {
            errorLabel.setVisible(false);
        } else {
            errorLabel.setVisible(true);
            add = false;
        }

        if (isNumber(costField.getText().toString())) {
            errorLabel2.setVisible(false);
        } else {
            errorLabel2.setVisible(true);
            add = false;
        }

        if (!(aIngredient.isEmpty())) {
            errorLabel3.setVisible(false);

        } else {
            errorLabel3.setVisible(true);
            add = false;
        }

        if (isNumber(stockField.getText().toString())) {
            errorLabel4.setVisible(false);
        } else {
            errorLabel4.setVisible(true);
            add = false;
        }

        if (add) {
            RecipeBean r = new RecipeBean();
            r.setRecipe(nameField.getText().toString());
            r.setCost(Float.parseFloat(costField.getText().toString()));
            r.setStock(Float.parseFloat(stockField.getText().toString()));
            CategoryBean category = (CategoryBean) categoryBox.getSelectedItem();
            r.setCategory(category.getCategoryID());
            r.setRcstatus("available");

            if (rcImp.addRecipe(r)) {
                r.setRecipeID(rcImp.getLatestAddedID());
                for (IngredientBean i : aIngredient) {
                    inImp.addIngredient(r, i);
                }

                /*
                 JOptionPane.showMessageDialog(null, "Recipe successfully added!");
                 nameField.setText("");
                 costField.setText("");
                 stockField.setText("");
                 categoryBox.setSelectedIndex(0);
                 aIngredient.clear();
                 actualLabel.setText("0.00");
                 prepareCombo();*/
                rcman.setVisible(true);
                this.setVisible(false);
                rcman.prepareTable();

            }
        }
    }//GEN-LAST:event_addRecipeActionPerformed

    private void ingredientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingredientsTableMouseClicked

    }//GEN-LAST:event_ingredientsTableMouseClicked

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        rcman.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * * <--- JANERYS CODE STARTS HERE ---> **
     */
    //prepare comboBox
    public void computeActual() {
        RecipeBean rtemp = new RecipeBean();
        rtemp.setIngredients(aIngredient);
        actualLabel.setText(String.format("%.2f", rtemp.getActualPrice()));

    }

    //prepare comboBox
    public void prepareCombo() {
        //System.out.println("prepare..");
        ArrayList<CategoryBean> aCategory = catImp.getAllCategory();

        for (CategoryBean c : aCategory) {
            categoryBox.addItem(c);
        }

        String cols[] = {"Raw ID", "Raw Material", "Quantity"};
        DefaultTableModel ingredientModel = new DefaultTableModel(cols, 0);
        ingredientsTable.setModel(ingredientModel);
        ingredientsTable.getColumnModel().getColumn(0).setMinWidth(0);
        ingredientsTable.getColumnModel().getColumn(0).setMaxWidth(0);

        if (aIngredient != null) {
            for (IngredientBean ibean : aIngredient) {
                Object[] ingredient = {ibean.getRaw().getRawID(), ibean.getRaw().getRaw(), ibean.getAmount()};
                ingredientModel.addRow(ingredient);
            }
            ingredientsTable.setModel(ingredientModel);

        } else {
            //System.out.println("aIngredient is null");
        }

    }

    //check if number
    private boolean isNumber(String s) {
        try {
            Float.parseFloat(s);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    /**
     * * <--- JANERYS CODE ENDS HERE ---> **
     */
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel actualLabel;
    private javax.swing.JButton addRecipe;
    private javax.swing.JButton cancel;
    private javax.swing.JComboBox categoryBox;
    private javax.swing.JTextField costField;
    private javax.swing.JButton editIngredient;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel errorLabel2;
    private javax.swing.JLabel errorLabel3;
    private javax.swing.JLabel errorLabel4;
    private javax.swing.JTable ingredientsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField stockField;
    // End of variables declaration//GEN-END:variables
}
